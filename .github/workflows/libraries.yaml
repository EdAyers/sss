# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python build package

on:
  workflow_call:
    inputs:
      lib:
        required: true
        type: string

jobs:
  build:
    name: "Python"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up pip cache
        if: runner.os == 'Linux'
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-pip-
      - uses: actions/setup-python@v4
        with:
          python-version: |
            3.8
            3.9
            3.10
      - name: Install Hatch
        run: pipx install hatch
      - name: Run tests
        working-directory: "./${{ inputs.lib }}"
        run: hatch run test:no-cov
      # [todo]
      # - name: Build documentation
      #   working-directory: "./${{ inputs.lib }}"
      #   run: hatch run docs:build
      # - name: Upload docs artifact
      #   uses: actions/upload-pages-artifact@v1
      #   with:
      #     path: ${{inputs.lib}}/docs/_build/html

  publish:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    env:
      HATCH_INDEX_USER: __token__
      HATCH_INDEX_AUTH: ${{ secrets.pypi_password }}
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Install Hatch
        run: pipx install hatch
      - name: Build dist
        working-directory: "./${{inputs.lib}}"
        run: hatch build
      - name: Publish on PyPI
        run: hatch publish
        working-directory: "./${{inputs.lib}}"

  # [todo]
  # deploy:
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   needs: build
  #   # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
  #   permissions:
  #     pages: write # to deploy to Pages
  #     id-token: write # to verify the deployment originates from an appropriate source
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v1
